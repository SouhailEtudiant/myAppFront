{
  "version": 3,
  "sources": ["../../../../../node_modules/ts-md5/dist/esm/md5.js", "../../../../../node_modules/ngx-avatars/fesm2022/ngx-avatars.mjs"],
  "sourcesContent": ["/*\n\nTypeScript Md5\n==============\n\nBased on work by\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* André Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\nEffectively a TypeScrypt re-write of Raymond Hill JS Library\n\nThe MIT License (MIT)\n\nCopyright (C) 2014 Raymond Hill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2015 André Cruz <amdfcruz@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT YOU WANT TO.\n\n\n*/\n;\nexport class Md5 {\n    constructor() {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state = new Int32Array(4);\n        this._buffer = new ArrayBuffer(68);\n        this._buffer8 = new Uint8Array(this._buffer, 0, 68);\n        this._buffer32 = new Uint32Array(this._buffer, 0, 17);\n        this.start();\n    }\n    static hashStr(str, raw = false) {\n        return this.onePassHasher\n            .start()\n            .appendStr(str)\n            .end(raw);\n    }\n    static hashAsciiStr(str, raw = false) {\n        return this.onePassHasher\n            .start()\n            .appendAsciiStr(str)\n            .end(raw);\n    }\n    static _hex(x) {\n        const hc = Md5.hexChars;\n        const ho = Md5.hexOut;\n        let n;\n        let offset;\n        let j;\n        let i;\n        for (i = 0; i < 4; i += 1) {\n            offset = i * 8;\n            n = x[i];\n            for (j = 0; j < 8; j += 2) {\n                ho[offset + 1 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n                ho[offset + 0 + j] = hc.charAt(n & 0x0F);\n                n >>>= 4;\n            }\n        }\n        return ho.join('');\n    }\n    static _md5cycle(x, k) {\n        let a = x[0];\n        let b = x[1];\n        let c = x[2];\n        let d = x[3];\n        // ff()\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        // gg()\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        // hh()\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        // ii()\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n    /**\n     * Initialise buffer to be hashed\n     */\n    start() {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state.set(Md5.stateIdentity);\n        return this;\n    }\n    // Char to code point to to array conversion:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n    // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown\n    /**\n     * Append a UTF-8 string to the hash buffer\n     * @param str String to append\n     */\n    appendStr(str) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let code;\n        let i;\n        for (i = 0; i < str.length; i += 1) {\n            code = str.charCodeAt(i);\n            if (code < 128) {\n                buf8[bufLen++] = code;\n            }\n            else if (code < 0x800) {\n                buf8[bufLen++] = (code >>> 6) + 0xC0;\n                buf8[bufLen++] = code & 0x3F | 0x80;\n            }\n            else if (code < 0xD800 || code > 0xDBFF) {\n                buf8[bufLen++] = (code >>> 12) + 0xE0;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            else {\n                code = ((code - 0xD800) * 0x400) + (str.charCodeAt(++i) - 0xDC00) + 0x10000;\n                if (code > 0x10FFFF) {\n                    throw new Error('Unicode standard supports code points up to U+10FFFF');\n                }\n                buf8[bufLen++] = (code >>> 18) + 0xF0;\n                buf8[bufLen++] = (code >>> 12 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;\n                buf8[bufLen++] = (code & 0x3F) | 0x80;\n            }\n            if (bufLen >= 64) {\n                this._dataLength += 64;\n                Md5._md5cycle(this._state, buf32);\n                bufLen -= 64;\n                buf32[0] = buf32[16];\n            }\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n    /**\n     * Append an ASCII string to the hash buffer\n     * @param str String to append\n     */\n    appendAsciiStr(str) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n        for (;;) {\n            i = Math.min(str.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = str.charCodeAt(j++);\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n    /**\n     * Append a byte array to the hash buffer\n     * @param input array to append\n     */\n    appendByteArray(input) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n        for (;;) {\n            i = Math.min(input.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = input[j++];\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n    /**\n     * Get the state of the hash buffer\n     */\n    getState() {\n        const s = this._state;\n        return {\n            buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)),\n            buflen: this._bufferLength,\n            length: this._dataLength,\n            state: [s[0], s[1], s[2], s[3]]\n        };\n    }\n    /**\n     * Override the current state of the hash buffer\n     * @param state New hash buffer state\n     */\n    setState(state) {\n        const buf = state.buffer;\n        const x = state.state;\n        const s = this._state;\n        let i;\n        this._dataLength = state.length;\n        this._bufferLength = state.buflen;\n        s[0] = x[0];\n        s[1] = x[1];\n        s[2] = x[2];\n        s[3] = x[3];\n        for (i = 0; i < buf.length; i += 1) {\n            this._buffer8[i] = buf.charCodeAt(i);\n        }\n    }\n    /**\n     * Hash the current state of the hash buffer and return the result\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    end(raw = false) {\n        const bufLen = this._bufferLength;\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        const i = (bufLen >> 2) + 1;\n        this._dataLength += bufLen;\n        const dataBitsLen = this._dataLength * 8;\n        buf8[bufLen] = 0x80;\n        buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;\n        buf32.set(Md5.buffer32Identity.subarray(i), i);\n        if (bufLen > 55) {\n            Md5._md5cycle(this._state, buf32);\n            buf32.set(Md5.buffer32Identity);\n        }\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        if (dataBitsLen <= 0xFFFFFFFF) {\n            buf32[14] = dataBitsLen;\n        }\n        else {\n            const matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);\n            if (matches === null) {\n                return;\n            }\n            const lo = parseInt(matches[2], 16);\n            const hi = parseInt(matches[1], 16) || 0;\n            buf32[14] = lo;\n            buf32[15] = hi;\n        }\n        Md5._md5cycle(this._state, buf32);\n        return raw ? this._state : Md5._hex(this._state);\n    }\n}\n// Private Static Variables\nMd5.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);\nMd5.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nMd5.hexChars = '0123456789abcdef';\nMd5.hexOut = [];\n// Permanent instance is to use for one-call hashing\nMd5.onePassHasher = new Md5();\nif (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n    throw new Error('Md5 self test failed.');\n}\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Md5 } from 'ts-md5';\nimport * as i1 from '@angular/common/http';\nimport { takeWhile, map } from 'rxjs/operators';\nimport * as i3 from '@angular/platform-browser';\n\n/**\n * Contract of all async sources.\n * Every async source must implement the processResponse method that extracts the avatar url from the data\n */\nfunction AvatarComponent_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 3);\n    i0.ɵɵlistener(\"error\", function AvatarComponent_img_1_Template_img_error_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.fetchAvatarSource());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.avatarSrc, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r2.customAlt ? ctx_r2.customAlt : ctx_r2.avatarAlt)(\"width\", ctx_r2.size)(\"height\", ctx_r2.size)(\"ngStyle\", ctx_r2.avatarStyle)(\"referrerPolicy\", ctx_r2.referrerpolicy);\n  }\n}\nfunction AvatarComponent_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.avatarStyle);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.avatarText, \" \");\n  }\n}\nfunction AvatarComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AvatarComponent_ng_template_2_div_0_Template, 2, 2, \"div\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.avatarText);\n  }\n}\nclass AsyncSource {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n  }\n}\nvar AvatarSource;\n(function (AvatarSource) {\n  AvatarSource[\"FACEBOOK\"] = \"facebook\";\n  AvatarSource[\"GOOGLE\"] = \"google\";\n  AvatarSource[\"TWITTER\"] = \"twitter\";\n  AvatarSource[\"INSTAGRAM\"] = \"instagram\";\n  AvatarSource[\"VKONTAKTE\"] = \"vkontakte\";\n  AvatarSource[\"SKYPE\"] = \"skype\";\n  AvatarSource[\"GRAVATAR\"] = \"gravatar\";\n  AvatarSource[\"GITHUB\"] = \"github\";\n  AvatarSource[\"CUSTOM\"] = \"custom\";\n  AvatarSource[\"INITIALS\"] = \"initials\";\n  AvatarSource[\"VALUE\"] = \"value\";\n})(AvatarSource || (AvatarSource = {}));\n\n/**\n *  Facebook source implementation.\n *  Fetch avatar source based on facebook identifier\n *  and image size\n */\nclass Facebook {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n    this.sourceType = AvatarSource.FACEBOOK;\n  }\n  getAvatar(size) {\n    return 'https://graph.facebook.com/' + `${this.sourceId}/picture?width=${size}&height=${size}`;\n  }\n}\n\n/**\n *  Twitter source implementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nclass Twitter {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n    this.sourceType = AvatarSource.TWITTER;\n  }\n  getAvatar(size) {\n    const twitterImgSize = this.getImageSize(size);\n    return `https://twitter.com/${this.sourceId}/profile_image?size=${twitterImgSize}`;\n  }\n  getImageSize(size) {\n    if (size <= 24) {\n      return 'mini';\n    }\n    if (size <= 48) {\n      return 'normal';\n    }\n    if (size <= 73) {\n      return 'bigger';\n    }\n    return 'original';\n  }\n}\n\n/**\n *  Google source implementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nclass Google extends AsyncSource {\n  constructor(sourceId) {\n    super(sourceId);\n    this.sourceType = AvatarSource.GOOGLE;\n  }\n  getAvatar() {\n    return `https://picasaweb.google.com/data/entry/api/user/${this.sourceId}?alt=json`;\n  }\n  /**\n   * Extract google avatar from json data\n   */\n  processResponse(data, size) {\n    const avatarSrc = data.entry.gphoto$thumbnail.$t;\n    if (avatarSrc) {\n      return avatarSrc.replace('s64', 's' + size);\n    }\n    return null;\n  }\n}\n\n/**\n *  Instagram source implementation.\n *  Fetch avatar source based on instagram identifier\n */\nclass Instagram extends AsyncSource {\n  constructor(sourceId) {\n    super(sourceId);\n    this.sourceType = AvatarSource.INSTAGRAM;\n  }\n  getAvatar() {\n    return `https://www.instagram.com/${this.sourceId}/?__a=1`;\n  }\n  /**\n   * extract instagram avatar from json data\n   */\n  processResponse(data, size) {\n    return `${data.graphql.user.profile_pic_url_hd}&s=${size}`;\n  }\n}\n\n/**\n *  Custom source implementation.\n *  return custom image as an avatar\n *\n */\nclass Custom {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n    this.sourceType = AvatarSource.CUSTOM;\n  }\n  getAvatar() {\n    return this.sourceId;\n  }\n}\n\n/**\n * Initials source implementation.\n * return the initials of the given value\n */\nclass Initials {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n    this.sourceType = AvatarSource.INITIALS;\n  }\n  getAvatar(size) {\n    return this.getInitials(this.sourceId, size);\n  }\n  /**\n   * Returns the initial letters of a name in a string.\n   */\n  getInitials(name, size) {\n    name = name.trim();\n    if (!name) {\n      return '';\n    }\n    const initials = name.split(' ');\n    if (size && size < initials.length) {\n      return this.constructInitials(initials.slice(0, size));\n    } else {\n      return this.constructInitials(initials);\n    }\n  }\n  /**\n   * Iterates a person's name string to get the initials of each word in uppercase.\n   */\n  constructInitials(elements) {\n    if (!elements || !elements.length) {\n      return '';\n    }\n    return elements.filter(element => element && element.length > 0).map(element => element[0].toUpperCase()).join('');\n  }\n}\nfunction isRetina() {\n  if (typeof window !== 'undefined' && window !== null) {\n    if (window.devicePixelRatio > 1.25) {\n      return true;\n    }\n    const mediaQuery = '(-webkit-min-device-pixel-ratio: 1.25), (min--moz-device-pixel-ratio: 1.25), (-o-min-device-pixel-ratio: 5/4), (min-resolution: 1.25dppx)';\n    if (window.matchMedia && window.matchMedia(mediaQuery).matches) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n *  Gravatar source implementation.\n *  Fetch avatar source based on gravatar email\n */\nclass Gravatar {\n  constructor(value) {\n    this.value = value;\n    this.sourceType = AvatarSource.GRAVATAR;\n    this.sourceId = value.match('^[a-f0-9]{32}$') ? value : Md5.hashStr(value).toString();\n  }\n  getAvatar(size) {\n    const avatarSize = isRetina() ? size * 2 : size;\n    return `https://secure.gravatar.com/avatar/${this.sourceId}?s=${avatarSize}&d=404`;\n  }\n}\n\n/**\n *  Skype source implementation.\n *  Fetch avatar source based on skype identifier\n */\nclass Skype {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n    this.sourceType = AvatarSource.SKYPE;\n  }\n  getAvatar() {\n    return `https://api.skype.com/users/${this.sourceId}/profile/avatar`;\n  }\n}\n\n/**\n *  Value source implementation.\n *  return the value as avatar\n */\nclass Value {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n    this.sourceType = AvatarSource.VALUE;\n  }\n  getAvatar() {\n    return this.sourceId;\n  }\n}\n\n/**\n *  Vkontakte source implementation.\n *  Fetch avatar source based on vkontakte identifier\n *  and image size\n */\nconst apiVersion = 5.8;\nclass Vkontakte extends AsyncSource {\n  constructor(sourceId) {\n    super(sourceId);\n    this.sourceType = AvatarSource.VKONTAKTE;\n  }\n  getAvatar(size) {\n    const imgSize = this.getImageSize(size);\n    return `https://api.vk.com/method/users.get?user_id=${this.sourceId}&v=${apiVersion}&fields=${imgSize}`;\n  }\n  /**\n   * extract vkontakte avatar from json data\n   */\n  processResponse(data) {\n    // avatar key property is the size used to generate avatar url\n    // size property is always the last key in the response object\n    const sizeProperty = Object.keys(data['response'][0]).pop();\n    if (!sizeProperty) {\n      return null;\n    }\n    // return avatar src\n    return data['response'][0][sizeProperty] || null;\n  }\n  /**\n   * Returns image size related to vkontakte API\n   */\n  getImageSize(size) {\n    if (size <= 50) {\n      return 'photo_50';\n    }\n    if (size <= 100) {\n      return 'photo_100';\n    }\n    if (size <= 200) {\n      return 'photo_200';\n    }\n    return 'photo_max';\n  }\n}\n\n/**\n *  GitHub source implementation.\n *  Fetch avatar source based on github identifier\n */\nclass Github extends AsyncSource {\n  constructor(sourceId) {\n    super(sourceId);\n    this.sourceType = AvatarSource.GITHUB;\n  }\n  getAvatar() {\n    return `https://api.github.com/users/${this.sourceId}`;\n  }\n  /**\n   * extract github avatar from json data\n   */\n  processResponse(data, size) {\n    if (size) {\n      return `${data.avatar_url}&s=${size}`;\n    }\n    return data.avatar_url;\n  }\n}\n\n/**\n * Token used to inject the AvatarConfig object\n */\nconst AVATAR_CONFIG = new InjectionToken('avatar.config');\nclass AvatarConfigService {\n  constructor(userConfig) {\n    this.userConfig = userConfig;\n  }\n  getAvatarSources(defaultSources) {\n    if (this.userConfig && this.userConfig.sourcePriorityOrder && this.userConfig.sourcePriorityOrder.length) {\n      const uniqueSources = [...new Set(this.userConfig.sourcePriorityOrder)];\n      const validSources = uniqueSources.filter(source => defaultSources.includes(source));\n      return [...validSources, ...defaultSources.filter(source => !validSources.includes(source))];\n    }\n    return defaultSources;\n  }\n  getAvatarColors(defaultColors) {\n    return this.userConfig && this.userConfig.colors && this.userConfig.colors.length && this.userConfig.colors || defaultColors;\n  }\n  getDisableSrcCache(defaultDisableSrcCache) {\n    if (this.userConfig == null || this.userConfig.disableSrcCache == null) {\n      return defaultDisableSrcCache;\n    } else {\n      return this.userConfig.disableSrcCache;\n    }\n  }\n  static {\n    this.ɵfac = function AvatarConfigService_Factory(t) {\n      return new (t || AvatarConfigService)(i0.ɵɵinject(AVATAR_CONFIG, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AvatarConfigService,\n      factory: AvatarConfigService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AvatarConfigService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [AVATAR_CONFIG]\n    }]\n  }], null);\n})();\n\n/**\n * list of Supported avatar sources\n */\nconst defaultSources = [AvatarSource.FACEBOOK, AvatarSource.GOOGLE, AvatarSource.TWITTER, AvatarSource.INSTAGRAM, AvatarSource.VKONTAKTE, AvatarSource.SKYPE, AvatarSource.GRAVATAR, AvatarSource.GITHUB, AvatarSource.CUSTOM, AvatarSource.INITIALS, AvatarSource.VALUE];\n/**\n * list of default colors\n */\nconst defaultColors = ['#1abc9c', '#3498db', '#f1c40f', '#8e44ad', '#e74c3c', '#d35400', '#2c3e50', '#7f8c8d'];\n/**\n * Default disable custom source cache settings\n */\nconst defaultDisableSrcCache = false;\n/**\n * Provides utilities methods related to Avatar component\n */\nclass AvatarService {\n  constructor(http, avatarConfigService) {\n    this.http = http;\n    this.avatarConfigService = avatarConfigService;\n    this.avatarSources = defaultSources;\n    this.avatarColors = defaultColors;\n    this.failedSources = new Map();\n    this.overrideAvatarSources();\n    this.overrideAvatarColors();\n  }\n  fetchAvatar(avatarUrl) {\n    return this.http.get(avatarUrl);\n  }\n  getRandomColor(avatarText) {\n    if (!avatarText) {\n      return 'transparent';\n    }\n    const asciiCodeSum = this.calculateAsciiCode(avatarText);\n    return this.avatarColors[asciiCodeSum % this.avatarColors.length];\n  }\n  compareSources(sourceType1, sourceType2) {\n    return this.getSourcePriority(sourceType1) - this.getSourcePriority(sourceType2);\n  }\n  isSource(source) {\n    return this.avatarSources.includes(source);\n  }\n  isTextAvatar(sourceType) {\n    return [AvatarSource.INITIALS, AvatarSource.VALUE].includes(sourceType);\n  }\n  buildSourceKey(source) {\n    return source.sourceType + '-' + source.sourceId;\n  }\n  sourceHasFailedBefore(source) {\n    return this.failedSources.has(this.buildSourceKey(source));\n  }\n  markSourceAsFailed(source) {\n    this.failedSources.set(this.buildSourceKey(source), source);\n  }\n  overrideAvatarSources() {\n    this.avatarSources = this.avatarConfigService.getAvatarSources(defaultSources);\n  }\n  overrideAvatarColors() {\n    this.avatarColors = this.avatarConfigService.getAvatarColors(defaultColors);\n  }\n  calculateAsciiCode(value) {\n    return value.split('').map(letter => letter.charCodeAt(0)).reduce((previous, current) => previous + current);\n  }\n  getSourcePriority(sourceType) {\n    return this.avatarSources.indexOf(sourceType);\n  }\n  static {\n    this.ɵfac = function AvatarService_Factory(t) {\n      return new (t || AvatarService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(AvatarConfigService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AvatarService,\n      factory: AvatarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AvatarService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.HttpClient\n  }, {\n    type: AvatarConfigService\n  }], null);\n})();\n\n/**\n *  Custom source implementation (with no cache).\n *  return custom image as an avatar\n *\n */\nclass CustomNoCache {\n  constructor(sourceId) {\n    this.sourceId = sourceId;\n    this.sourceType = AvatarSource.CUSTOM;\n  }\n  getAvatar() {\n    const urlSuffix = Math.random();\n    return `${this.sourceId}${this.sourceId.indexOf('?') > -1 ? '&' : '?'}_=${urlSuffix}`;\n  }\n}\n\n/**\n * Factory class that implements factory method pattern.\n * Used to create Source implementation class based\n * on the source Type\n */\nclass SourceFactory {\n  constructor(avatarConfigService) {\n    this.sources = {};\n    const disableSrcCache = avatarConfigService.getDisableSrcCache(defaultDisableSrcCache);\n    this.sources[AvatarSource.FACEBOOK] = Facebook;\n    this.sources[AvatarSource.TWITTER] = Twitter;\n    this.sources[AvatarSource.GOOGLE] = Google;\n    this.sources[AvatarSource.INSTAGRAM] = Instagram;\n    this.sources[AvatarSource.SKYPE] = Skype;\n    this.sources[AvatarSource.GRAVATAR] = Gravatar;\n    this.sources[AvatarSource.CUSTOM] = disableSrcCache ? CustomNoCache : Custom;\n    this.sources[AvatarSource.INITIALS] = Initials;\n    this.sources[AvatarSource.VALUE] = Value;\n    this.sources[AvatarSource.VKONTAKTE] = Vkontakte;\n    this.sources[AvatarSource.GITHUB] = Github;\n  }\n  newInstance(sourceType, sourceValue) {\n    return new this.sources[sourceType](sourceValue);\n  }\n  static {\n    this.ɵfac = function SourceFactory_Factory(t) {\n      return new (t || SourceFactory)(i0.ɵɵinject(AvatarConfigService));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SourceFactory,\n      factory: SourceFactory.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SourceFactory, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: AvatarConfigService\n  }], null);\n})();\n\n/**\n * Universal avatar component that\n * generates avatar from different sources\n *\n * export\n * class AvatarComponent\n * implements {OnChanges}\n */\nclass AvatarComponent {\n  constructor(sourceFactory, avatarService, sanitizer) {\n    this.sourceFactory = sourceFactory;\n    this.avatarService = avatarService;\n    this.sanitizer = sanitizer;\n    this.round = true;\n    this.size = 50;\n    this.textSizeRatio = 3;\n    this.fgColor = '#FFF';\n    this.style = {};\n    this.cornerRadius = 0;\n    this.initialsSize = 0;\n    this.clickOnAvatar = new EventEmitter();\n    this.isAlive = true;\n    this.avatarSrc = null;\n    this.avatarAlt = null;\n    this.avatarText = null;\n    this.avatarStyle = {};\n    this.hostStyle = {};\n    this.currentIndex = -1;\n    this.sources = [];\n  }\n  onAvatarClicked() {\n    this.clickOnAvatar.emit(this.sources[this.currentIndex]);\n  }\n  /**\n   * Detect inputs change\n   *\n   * param {{ [propKey: string]: SimpleChange }} changes\n   *\n   * memberof AvatarComponent\n   */\n  ngOnChanges(changes) {\n    for (const propName in changes) {\n      if (this.avatarService.isSource(propName)) {\n        const sourceType = AvatarSource[propName.toUpperCase()];\n        const currentValue = changes[propName].currentValue;\n        if (currentValue && typeof currentValue === 'string') {\n          this.addSource(sourceType, currentValue);\n        } else {\n          const sanitized = this.sanitizer.sanitize(SecurityContext.URL, currentValue);\n          if (sanitized) {\n            this.addSource(sourceType, sanitized);\n          } else {\n            this.removeSource(sourceType);\n          }\n        }\n      }\n    }\n    // reinitialize the avatar component when a source property value has changed\n    // the fallback system must be re-invoked with the new values.\n    this.initializeAvatar();\n  }\n  /**\n   * Fetch avatar source\n   *\n   * memberOf AvatarComponent\n   */\n  fetchAvatarSource() {\n    const previousSource = this.sources[this.currentIndex];\n    if (previousSource) {\n      this.avatarService.markSourceAsFailed(previousSource);\n    }\n    const source = this.findNextSource();\n    if (!source) {\n      return;\n    }\n    if (this.avatarService.isTextAvatar(source.sourceType)) {\n      this.buildTextAvatar(source);\n      this.avatarSrc = null;\n    } else {\n      this.buildImageAvatar(source);\n    }\n  }\n  findNextSource() {\n    while (++this.currentIndex < this.sources.length) {\n      const source = this.sources[this.currentIndex];\n      if (source && !this.avatarService.sourceHasFailedBefore(source)) {\n        return source;\n      }\n    }\n    return null;\n  }\n  ngOnDestroy() {\n    this.isAlive = false;\n  }\n  /**\n   * Initialize the avatar component and its fallback system\n   */\n  initializeAvatar() {\n    this.currentIndex = -1;\n    if (this.sources.length > 0) {\n      this.sortAvatarSources();\n      this.fetchAvatarSource();\n      this.hostStyle = {\n        width: this.size + 'px',\n        height: this.size + 'px'\n      };\n    }\n  }\n  sortAvatarSources() {\n    this.sources.sort((source1, source2) => this.avatarService.compareSources(source1.sourceType, source2.sourceType));\n  }\n  buildTextAvatar(avatarSource) {\n    this.avatarText = avatarSource.getAvatar(+this.initialsSize);\n    this.avatarStyle = this.getInitialsStyle(avatarSource.sourceId);\n  }\n  buildImageAvatar(avatarSource) {\n    this.avatarStyle = this.getImageStyle();\n    if (avatarSource instanceof AsyncSource) {\n      this.fetchAndProcessAsyncAvatar(avatarSource);\n    } else {\n      this.avatarSrc = this.sanitizer.bypassSecurityTrustUrl(avatarSource.getAvatar(+this.size));\n      this.avatarAlt = avatarSource.getAvatar(+this.size);\n    }\n  }\n  /**\n   *\n   * returns initials style\n   *\n   * memberOf AvatarComponent\n   */\n  getInitialsStyle(avatarValue) {\n    return {\n      textAlign: 'center',\n      borderRadius: this.round ? '100%' : this.cornerRadius + 'px',\n      border: this.borderColor ? '1px solid ' + this.borderColor : '',\n      textTransform: 'uppercase',\n      color: this.fgColor,\n      backgroundColor: this.bgColor ? this.bgColor : this.avatarService.getRandomColor(avatarValue),\n      font: Math.floor(+this.size / this.textSizeRatio) + 'px Helvetica, Arial, sans-serif',\n      lineHeight: this.size + 'px',\n      ...this.style\n    };\n  }\n  /**\n   *\n   * returns image style\n   *\n   * memberOf AvatarComponent\n   */\n  getImageStyle() {\n    return {\n      maxWidth: '100%',\n      borderRadius: this.round ? '50%' : this.cornerRadius + 'px',\n      border: this.borderColor ? '1px solid ' + this.borderColor : '',\n      width: this.size + 'px',\n      height: this.size + 'px',\n      ...this.style\n    };\n  }\n  /**\n   * Fetch avatar image asynchronously.\n   *\n   * param {Source} source represents avatar source\n   * memberof AvatarComponent\n   */\n  fetchAndProcessAsyncAvatar(source) {\n    if (this.avatarService.sourceHasFailedBefore(source)) {\n      return;\n    }\n    this.avatarService.fetchAvatar(source.getAvatar(+this.size)).pipe(takeWhile(() => this.isAlive), map(response => source.processResponse(response, +this.size))).subscribe({\n      next: avatarSrc => this.avatarSrc = avatarSrc,\n      error: () => {\n        this.fetchAvatarSource();\n      }\n    });\n  }\n  /**\n   * Add avatar source\n   *\n   * param sourceType avatar source type e.g facebook,twitter, etc.\n   * param sourceValue  source value e.g facebookId value, etc.\n   */\n  addSource(sourceType, sourceValue) {\n    const source = this.sources.find(s => s.sourceType === sourceType);\n    if (source) {\n      source.sourceId = sourceValue;\n    } else {\n      this.sources.push(this.sourceFactory.newInstance(sourceType, sourceValue));\n    }\n  }\n  /**\n   * Remove avatar source\n   *\n   * param sourceType avatar source type e.g facebook,twitter, etc.\n   */\n  removeSource(sourceType) {\n    this.sources = this.sources.filter(source => source.sourceType !== sourceType);\n  }\n  static {\n    this.ɵfac = function AvatarComponent_Factory(t) {\n      return new (t || AvatarComponent)(i0.ɵɵdirectiveInject(SourceFactory), i0.ɵɵdirectiveInject(AvatarService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AvatarComponent,\n      selectors: [[\"ngx-avatars\"]],\n      inputs: {\n        round: \"round\",\n        size: \"size\",\n        textSizeRatio: \"textSizeRatio\",\n        bgColor: \"bgColor\",\n        fgColor: \"fgColor\",\n        borderColor: \"borderColor\",\n        style: \"style\",\n        cornerRadius: \"cornerRadius\",\n        facebook: [i0.ɵɵInputFlags.None, \"facebookId\", \"facebook\"],\n        twitter: [i0.ɵɵInputFlags.None, \"twitterId\", \"twitter\"],\n        google: [i0.ɵɵInputFlags.None, \"googleId\", \"google\"],\n        instagram: [i0.ɵɵInputFlags.None, \"instagramId\", \"instagram\"],\n        vkontakte: [i0.ɵɵInputFlags.None, \"vkontakteId\", \"vkontakte\"],\n        skype: [i0.ɵɵInputFlags.None, \"skypeId\", \"skype\"],\n        gravatar: [i0.ɵɵInputFlags.None, \"gravatarId\", \"gravatar\"],\n        github: [i0.ɵɵInputFlags.None, \"githubId\", \"github\"],\n        custom: [i0.ɵɵInputFlags.None, \"src\", \"custom\"],\n        customAlt: [i0.ɵɵInputFlags.None, \"alt\", \"customAlt\"],\n        initials: [i0.ɵɵInputFlags.None, \"name\", \"initials\"],\n        value: \"value\",\n        referrerpolicy: \"referrerpolicy\",\n        placeholder: \"placeholder\",\n        initialsSize: \"initialsSize\"\n      },\n      outputs: {\n        clickOnAvatar: \"clickOnAvatar\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 4,\n      vars: 3,\n      consts: [[\"textAvatar\", \"\"], [1, \"avatar-container\", 3, \"click\", \"ngStyle\"], [\"class\", \"avatar-content\", \"loading\", \"lazy\", 3, \"src\", \"alt\", \"width\", \"height\", \"ngStyle\", \"referrerPolicy\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"lazy\", 1, \"avatar-content\", 3, \"error\", \"src\", \"alt\", \"width\", \"height\", \"ngStyle\", \"referrerPolicy\"], [\"class\", \"avatar-content\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"avatar-content\", 3, \"ngStyle\"]],\n      template: function AvatarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵlistener(\"click\", function AvatarComponent_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onAvatarClicked());\n          });\n          i0.ɵɵtemplate(1, AvatarComponent_img_1_Template, 1, 6, \"img\", 2)(2, AvatarComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const textAvatar_r4 = i0.ɵɵreference(3);\n          i0.ɵɵproperty(\"ngStyle\", ctx.hostStyle);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.avatarSrc)(\"ngIfElse\", textAvatar_r4);\n        }\n      },\n      dependencies: [i4.NgIf, i4.NgStyle],\n      styles: [\"[_nghost-%COMP%]{border-radius:50%}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AvatarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-avatars',\n      template: `\n      <div\n              (click)=\"onAvatarClicked()\"\n              class=\"avatar-container\"\n              [ngStyle]=\"hostStyle\"\n      >\n          <img\n                  *ngIf=\"avatarSrc; else textAvatar\"\n                  [src]=\"avatarSrc\"\n                  [alt]=\"(customAlt)? customAlt: avatarAlt\"\n                  [width]=\"size\"\n                  [height]=\"size\"\n                  [ngStyle]=\"avatarStyle\"\n                  [referrerPolicy]=\"referrerpolicy\"\n                  (error)=\"fetchAvatarSource()\"\n                  class=\"avatar-content\"\n                  loading=\"lazy\"\n          />\n          <ng-template #textAvatar>\n              <div *ngIf=\"avatarText\" class=\"avatar-content\" [ngStyle]=\"avatarStyle\">\n                  {{ avatarText }}\n              </div>\n          </ng-template>\n      </div>\n  `,\n      styles: [\":host{border-radius:50%}\\n\"]\n    }]\n  }], () => [{\n    type: SourceFactory\n  }, {\n    type: AvatarService\n  }, {\n    type: i3.DomSanitizer\n  }], {\n    round: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    textSizeRatio: [{\n      type: Input\n    }],\n    bgColor: [{\n      type: Input\n    }],\n    fgColor: [{\n      type: Input\n    }],\n    borderColor: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    facebook: [{\n      type: Input,\n      args: ['facebookId']\n    }],\n    twitter: [{\n      type: Input,\n      args: ['twitterId']\n    }],\n    google: [{\n      type: Input,\n      args: ['googleId']\n    }],\n    instagram: [{\n      type: Input,\n      args: ['instagramId']\n    }],\n    vkontakte: [{\n      type: Input,\n      args: ['vkontakteId']\n    }],\n    skype: [{\n      type: Input,\n      args: ['skypeId']\n    }],\n    gravatar: [{\n      type: Input,\n      args: ['gravatarId']\n    }],\n    github: [{\n      type: Input,\n      args: ['githubId']\n    }],\n    custom: [{\n      type: Input,\n      args: ['src']\n    }],\n    customAlt: [{\n      type: Input,\n      args: ['alt']\n    }],\n    initials: [{\n      type: Input,\n      args: ['name']\n    }],\n    value: [{\n      type: Input\n    }],\n    referrerpolicy: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    initialsSize: [{\n      type: Input\n    }],\n    clickOnAvatar: [{\n      type: Output\n    }]\n  });\n})();\nclass AvatarModule {\n  static forRoot(avatarConfig) {\n    return {\n      ngModule: AvatarModule,\n      providers: [{\n        provide: AVATAR_CONFIG,\n        useValue: avatarConfig ? avatarConfig : {}\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function AvatarModule_Factory(t) {\n      return new (t || AvatarModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: AvatarModule,\n      declarations: [AvatarComponent],\n      imports: [CommonModule],\n      exports: [AvatarComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [SourceFactory, AvatarService, AvatarConfigService],\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AvatarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AvatarComponent],\n      providers: [SourceFactory, AvatarService, AvatarConfigService],\n      exports: [AvatarComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-avatars\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AvatarComponent, AvatarModule, AvatarService, AvatarSource, defaultColors, defaultDisableSrcCache, defaultSources };\n"],
  "mappings": "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",
  "names": ["AvatarSource", "defaultSources", "defaultColors", "defaultDisableSrcCache"]
}
